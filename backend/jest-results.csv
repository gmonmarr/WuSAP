suite,testName,status,duration,dateTaken
"orderService.test.js","getAllOrders fetches all orders",passed,2,2025-06-09
"orderService.test.js","getAllActiveOrders fetches all active orders",passed,1,2025-06-09
"orderService.test.js","getOrderById fetches order, items, and history by orderID",passed,1,2025-06-09
"orderService.test.js","getOrdersByStore fetches orders by storeID",passed,,2025-06-09
"orderService.test.js","getOrdersWithDetailsForStore fetches detailed orders for a store",passed,1,2025-06-09
"orderService.test.js","getOrderWithFullDetails fetches full order details (order, items w/ product, history w/ employee)",passed,1,2025-06-09
"orderService.test.js","getOrderWithFullDetails throws error if order not found",passed,13,2025-06-09
"orderService.test.js","getOrdersByEmployee fetches all orders for an employee",passed,1,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Pendiente to Pendiente as warehouse_manager: should be true",passed,1,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Pendiente to Aprobada as warehouse_manager: should be true",passed,1,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Pendiente to Cancelada as warehouse_manager: should be true",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Pendiente to Confirmada as warehouse_manager: should be false",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Pendiente to Entregada as warehouse_manager: should be false",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Aprobada to Confirmada as warehouse_manager: should be true",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Aprobada to Cancelada as warehouse_manager: should be true",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Aprobada to Entregada as warehouse_manager: should be true",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Aprobada to Pendiente as warehouse_manager: should be false",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Confirmada to Entregada as warehouse_manager: should be true",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Confirmada to Cancelada as warehouse_manager: should be true",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Confirmada to Aprobada as warehouse_manager: should be false",passed,1,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Confirmada to Pendiente as warehouse_manager: should be false",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Pendiente to Pendiente as manager: should be true",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Pendiente to Cancelada as manager: should be true",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Pendiente to Aprobada as manager: should be false",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Pendiente to Confirmada as manager: should be false",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Pendiente to Entregada as manager: should be false",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Aprobada to Entregada as manager: should be true",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Aprobada to Cancelada as manager: should be true",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Aprobada to Pendiente as manager: should be false",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Aprobada to Confirmada as manager: should be false",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Pendiente to Aprobada as admin: should be false",passed,,2025-06-09
"updateOrder.test.js","validateStatusTransition permutations from Aprobada to Cancelada as employee: should be false",passed,,2025-06-09
"updateOrder.test.js","updateOrder warehouse_manager cannot update orderitems of manager",passed,15,2025-06-09
"updateOrder.test.js","updateOrder warehouse_manager does not need updatedItems for status change",passed,1,2025-06-09
"updateOrder.test.js","updateOrder subtracts warehouse inventory on approval",passed,,2025-06-09
"updateOrder.test.js","updateOrder manager can update own orderItems",passed,,2025-06-09
"updateOrder.test.js","updateOrder fails approval if not enough stock",passed,1,2025-06-09
"updateOrder.test.js","updateOrder manager cannot self-approve",passed,,2025-06-09
"updateOrder.test.js","updateOrder handles undefined comments in logs/history",passed,,2025-06-09
"updateOrder.test.js","updateOrder manager cannot edit warehouse_manager orders",passed,1,2025-06-09
"updateOrder.test.js","updateOrder logs \"No changes detected\" when only comments change",passed,1,2025-06-09
"updateOrder.test.js","updateOrder logs \"No changes detected\" when there are no changes",passed,1,2025-06-09
"updateOrder.test.js","updateOrder throws if orderItems do not belong to order",passed,1,2025-06-09
"updateOrder.test.js","updateOrder updates only the provided order item and logs correctly",passed,,2025-06-09
"updateOrder.test.js","updateOrder blocks update to Aprobada when there is not enough warehouse inventory",passed,1,2025-06-09
"updateOrder.test.js","updateOrder reimburses inventory when cancelling an approved order (Aprobada â†’ Cancelada)",passed,,2025-06-09
"updateOrder.test.js","updateOrder adds items to store inventory on Entregada transition",passed,,2025-06-09
"updateOrder.test.js","updateOrder creates a new inventory record if not found when marking Entregada",passed,1,2025-06-09
"updateOrder.test.js","updateOrder throws if updatedItems contains orderItem that does not belong to the order",passed,,2025-06-09
"updateOrder.test.js","updateOrder allows updating only status/comments, defaults orderTotal for validation",passed,,2025-06-09
"createOrder.test.js","manager cannot create order for product not in warehouse inventory",passed,15,2025-06-09
"createOrder.test.js","manager cannot create order for product if insufficient inventory",passed,,2025-06-09
"createOrder.test.js","warehouse_manager can create order for product that is in Products table but not yet in inventory",passed,1,2025-06-09
"createOrder.test.js","warehouse_manager cannot create order for product not in Products table",passed,1,2025-06-09
"createOrder.test.js","manager cannot create order if item.source is not \"warehouse\"",passed,,2025-06-09
"locationService.test.js","locationService getAllLocations returns rows",passed,1,2025-06-09
"locationService.test.js","locationService createLocation works (happy path)",passed,1,2025-06-09
"locationService.test.js","locationService checkLocationsTable exists true",passed,,2025-06-09
"locationService.test.js","locationService checkLocationsTable exists false",passed,1,2025-06-09
"locationService.test.js","locationService createLocationsTable works",passed,,2025-06-09
"locationService.test.js","locationService createLocationsTable returns ok on already exists",passed,,2025-06-09
"locationService.test.js","locationService createLocationsTable throws on unknown error",passed,8,2025-06-09
"locationService.test.js","locationService getLocationById returns the correct row",passed,,2025-06-09
"locationService.test.js","locationService getLocationById returns null if not found",passed,1,2025-06-09
"locationService.test.js","locationService updateLocation updates the correct fields (all provided)",passed,,2025-06-09
"locationService.test.js","locationService updateLocation updates only provided fields",passed,,2025-06-09
"locationService.test.js","locationService updateLocation returns early if no fields",passed,1,2025-06-09
"locationService.test.js","locationService updateLocation throws if not found",passed,3,2025-06-09
"locationService.test.js","locationService deleteLocation deletes when no employees assigned",passed,1,2025-06-09
"locationService.test.js","locationService deleteLocation throws if not found",passed,,2025-06-09
"locationService.test.js","locationService deleteLocation throws if employees assigned",passed,,2025-06-09
"locationService.test.js","locationService checkLocationHasEmployees returns true/false",passed,,2025-06-09
"locationService.test.js","locationService getEmployeesByLocation returns employee list",passed,,2025-06-09
"productService.test.js","productService getAllProducts returns all products",passed,1,2025-06-09
"productService.test.js","productService getActiveProductsService returns only active products",passed,1,2025-06-09
"productService.test.js","productService addProduct inserts product and logs, returns productID",passed,1,2025-06-09
"productService.test.js","productService addProduct rolls back on error",passed,10,2025-06-09
"productService.test.js","productService updateProduct updates fields and logs",passed,1,2025-06-09
"productService.test.js","productService updateProduct returns false if no fields",passed,,2025-06-09
"productService.test.js","productService updateProduct throws if product not found",passed,1,2025-06-09
"productService.test.js","productService deleteProduct deletes product and logs",passed,,2025-06-09
"productService.test.js","productService deleteProduct throws if not found",passed,1,2025-06-09
"productService.test.js","productService deleteProduct errors if product is used",passed,,2025-06-09
"authService.test.js","authService should log in a valid active user and return a token",passed,1,2025-06-09
"authService.test.js","authService should reject if user is not found",passed,8,2025-06-09
"authService.test.js","authService should reject if password does not match",passed,,2025-06-09
"authService.test.js","authService should reject if user is blocked",passed,1,2025-06-09
"authService.test.js","authService should reject if user is not active",passed,,2025-06-09
"authService.test.js","authService should register a new user successfully",passed,1,2025-06-09
"authService.test.js","authService should not register a user that already exists",passed,,2025-06-09
"authService.test.js","authService should rollback on error during registration",passed,1,2025-06-09
"salesService.test.js","salesService getAllSales returns sales with employee names",passed,1,2025-06-09
"salesService.test.js","salesService getSaleById returns sale and its items",passed,1,2025-06-09
"salesService.test.js","salesService getSaleById returns null if not found",passed,,2025-06-09
"salesService.test.js","salesService postSale inserts sale and items, edits inventory, logs, and commits",passed,1,2025-06-09
"salesService.test.js","salesService deleteSale refunds inventory, logs, and deletes sale/items",passed,,2025-06-09
"salesService.test.js","salesService deleteSale throws if no sale found",passed,9,2025-06-09
"inventoryService.test.js","inventoryService getAllInventory returns rows",passed,1,2025-06-09
"inventoryService.test.js","inventoryService getInventoryByStore returns filtered rows",passed,1,2025-06-09
"inventoryService.test.js","inventoryService getWarehouseProducts returns correct products",passed,,2025-06-09
"inventoryService.test.js","inventoryService assignInventoryToStore updates if exists",passed,1,2025-06-09
"inventoryService.test.js","inventoryService assignInventoryToStore inserts if not exists",passed,,2025-06-09
"inventoryService.test.js","inventoryService editInventory works (and calls log)",passed,1,2025-06-09
"inventoryService.test.js","inventoryService getInventoryByStoreByProduct returns correct inventory",passed,,2025-06-09
"inventoryService.test.js","inventoryService getInventoryByID returns inventory by ID",passed,1,2025-06-09
"employeeService.test.js","employeeService should return all employees with location",passed,2,2025-06-09
"employeeService.test.js","employeeService should update employee with provided fields",passed,1,2025-06-09
"employeeService.test.js","employeeService should fail to update if no fields are provided",passed,,2025-06-09
"employeeService.test.js","employeeService should throw error if invalid role is provided",passed,7,2025-06-09
"employeeService.test.js","employeeService should rollback on SQL error",passed,1,2025-06-09
"tableLogService.test.js","tableLogService logToTableLogs inserts log with acquired connection (no conn provided)",passed,2,2025-06-09
"tableLogService.test.js","tableLogService logToTableLogs inserts log using provided connection, does not release",passed,,2025-06-09
"tableLogService.test.js","tableLogService logToTableLogs throws error if employeeID is missing",passed,6,2025-06-09
"tableLogService.test.js","tableLogService logToTableLogs throws error if required fields are missing",passed,1,2025-06-09
"tableLogService.test.js","tableLogService getTableLogs queries all logs with no filters",passed,,2025-06-09
"tableLogService.test.js","tableLogService getTableLogs filters by tableName, employeeID, and recordID",passed,1,2025-06-09